/*<simulation_settings>
<<<<<<< HEAD
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off aula07 -c aula07 --vector_source="C:/Users/gui_r/OneDrive/Documentos/GitHub/Insper/design-computadores/aula-8/Waveform.vwf" --testbench_file="C:/Users/gui_r/OneDrive/Documentos/GitHub/Insper/design-computadores/aula-8/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off aula07 -c aula07 --vector_source="C:/Users/gui_r/OneDrive/Documentos/GitHub/Insper/design-computadores/aula-8/Waveform.vwf" --testbench_file="C:/Users/gui_r/OneDrive/Documentos/GitHub/Insper/design-computadores/aula-8/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="C:/Users/gui_r/OneDrive/Documentos/GitHub/Insper/design-computadores/aula-8/simulation/qsim/" aula07 -c aula07</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="C:/Users/gui_r/OneDrive/Documentos/GitHub/Insper/design-computadores/aula-8/simulation/qsim/" aula07 -c aula07</tnetlist_cmd>
=======
<ftestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off aula07 -c aula07 --vector_source="C:/Users/vieir/Desktop/Insper/6-semestre/design-computadores/aula-8/Waveform.vwf" --testbench_file="C:/Users/vieir/Desktop/Insper/6-semestre/design-computadores/aula-8/simulation/qsim/Waveform.vwf.vht"</ftestbench_cmd>
<ttestbench_cmd>quartus_eda --gen_testbench --tool=modelsim_oem --format=vhdl --write_settings_files=off aula07 -c aula07 --vector_source="C:/Users/vieir/Desktop/Insper/6-semestre/design-computadores/aula-8/Waveform.vwf" --testbench_file="C:/Users/vieir/Desktop/Insper/6-semestre/design-computadores/aula-8/simulation/qsim/Waveform.vwf.vht"</ttestbench_cmd>
<fnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=on --flatten_buses=off --tool=modelsim_oem --format=vhdl --output_directory="C:/Users/vieir/Desktop/Insper/6-semestre/design-computadores/aula-8/simulation/qsim/" aula07 -c aula07</fnetlist_cmd>
<tnetlist_cmd>quartus_eda --write_settings_files=off --simulation --functional=off --flatten_buses=off --timescale=1ps --tool=modelsim_oem --format=vhdl --output_directory="C:/Users/vieir/Desktop/Insper/6-semestre/design-computadores/aula-8/simulation/qsim/" aula07 -c aula07</tnetlist_cmd>
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
<modelsim_script>onerror {exit -code 1}
vlib work
vcom -work work aula07.vho
vcom -work work Waveform.vwf.vht
vsim -c -t 1ps -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.TopLevel_vhd_vec_tst
vcd file -direction aula07.msim.vcd
vcd add -internal TopLevel_vhd_vec_tst/*
vcd add -internal TopLevel_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
<<<<<<< HEAD
=======

>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
</modelsim_script>
<modelsim_script_timing>onerror {exit -code 1}
vlib work
vcom -work work aula07.vho
vcom -work work Waveform.vwf.vht
vsim -novopt -c -t 1ps -sdfmax TopLevel_vhd_vec_tst/i1=aula07_vhd.sdo -L cyclonev -L altera -L altera_mf -L 220model -L sgate -L altera_lnsim work.TopLevel_vhd_vec_tst
vcd file -direction aula07.msim.vcd
vcd add -internal TopLevel_vhd_vec_tst/*
vcd add -internal TopLevel_vhd_vec_tst/i1/*
proc simTimestamp {} {
    echo "Simulation time: $::now ps"
    if { [string equal running [runStatus]] } {
        after 2500 simTimestamp
    }
}
after 2500 simTimestamp
run -all
quit -f
<<<<<<< HEAD
=======

>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
</modelsim_script_timing>
<hdl_lang>vhdl</hdl_lang>
</simulation_settings>*/
/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2020  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and any partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details, at
https://fpgasoftware.intel.com/eula.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("HEX0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX0[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX0[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX0";
}

SIGNAL("HEX1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX1[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX1[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX1";
}

SIGNAL("HEX2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX2[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX2[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX2";
}

SIGNAL("HEX3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX3[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX3[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX3";
}

SIGNAL("HEX4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX4[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX4[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX4";
}

SIGNAL("HEX5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("HEX5[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("HEX5[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("HEX5[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("HEX5[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("HEX5[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("HEX5[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("HEX5[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "HEX5";
}

SIGNAL("KEY[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
<<<<<<< HEAD
	PARENT = "KEY";
}

SIGNAL("LEDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
=======
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	PARENT = "";
}

SIGNAL("LEDR[9]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

<<<<<<< HEAD
SIGNAL("SW")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 10;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("SW[9]")
=======
SIGNAL("LEDR[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[7]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[8]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[6]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[7]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[5]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[6]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[4]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[5]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[3]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[4]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[2]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[3]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[1]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[2]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("LEDR[0]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "SW";
}

SIGNAL("SW[0]")
=======
	DIRECTION = OUTPUT;
	PARENT = "";
}

GROUP("LEDR_OUT")
{
	MEMBERS = "LEDR[7]", "LEDR[6]", "LEDR[5]", "LEDR[4]", "LEDR[3]", "LEDR[2]", "LEDR[1]", "LEDR[0]";
}

SIGNAL("DATA_OUT")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("DATA_OUT[7]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
<<<<<<< HEAD
	DIRECTION = INPUT;
	PARENT = "SW";
=======
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
}

SIGNAL("DATA_OUT[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "DATA_OUT";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

TRANSITION_LIST("HEX0[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX0[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX1[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX2[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX3[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX4[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("HEX5[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("KEY[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 10.0;
		NODE
		{
			REPEAT = 49;
			LEVEL 0 FOR 10.0;
			LEVEL 1 FOR 10.0;
		}
		LEVEL 0 FOR 10.0;
	}
}

<<<<<<< HEAD
TRANSITION_LIST("LEDR[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

=======
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
TRANSITION_LIST("LEDR[9]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

<<<<<<< HEAD
TRANSITION_LIST("SW[9]")
=======
TRANSITION_LIST("LEDR[8]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[8]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[7]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[7]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[6]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[6]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[5]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[5]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[4]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[4]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[3]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[3]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[2]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[2]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[1]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		NODE
		{
			REPEAT = 25;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
	}
}

TRANSITION_LIST("SW[1]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("LEDR[0]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("SW[0]")
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[7]")
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
{
	NODE
	{
		REPEAT = 1;
<<<<<<< HEAD
		LEVEL 1 FOR 20.0;
		NODE
		{
			REPEAT = 24;
			LEVEL 0 FOR 20.0;
			LEVEL 1 FOR 20.0;
		}
		LEVEL 0 FOR 20.0;
=======
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
	}
}

TRANSITION_LIST("DATA_OUT[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL X FOR 1000.0;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	}
}

DISPLAY_LINE
{
	CHANNEL = "KEY[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9, 10, 11;
=======
	CHANNEL = "HEX0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[9]";
=======
	CHANNEL = "HEX0[6]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[8]";
=======
	CHANNEL = "HEX0[5]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[7]";
=======
	CHANNEL = "HEX0[4]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[6]";
=======
	CHANNEL = "HEX0[3]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[5]";
=======
	CHANNEL = "HEX0[2]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[4]";
=======
	CHANNEL = "HEX0[1]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[3]";
=======
	CHANNEL = "HEX0[0]";
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
<<<<<<< HEAD
	CHANNEL = "SW[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "SW[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "SW[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX0[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "HEX1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27;
=======
	CHANNEL = "HEX1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12, 13, 14, 15, 16;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[6]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[5]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[4]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[3]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[2]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[1]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX1[0]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
=======
	RADIX = Unsigned;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 9;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35;
=======
	RADIX = Unsigned;
	TREE_INDEX = 17;
	TREE_LEVEL = 0;
	CHILDREN = 18, 19, 20, 21, 22, 23, 24;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[6]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[5]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[4]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[3]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[2]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[1]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX2[0]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
=======
	RADIX = Unsigned;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 17;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 36;
	TREE_LEVEL = 0;
	CHILDREN = 37, 38, 39, 40, 41, 42, 43;
=======
	RADIX = Unsigned;
	TREE_INDEX = 25;
	TREE_LEVEL = 0;
	CHILDREN = 26, 27, 28, 29, 30, 31, 32;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[6]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[5]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[4]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[3]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[2]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[1]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX3[0]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 36;
=======
	RADIX = Unsigned;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 25;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 44;
	TREE_LEVEL = 0;
	CHILDREN = 45, 46, 47, 48, 49, 50, 51;
=======
	RADIX = Unsigned;
	TREE_INDEX = 33;
	TREE_LEVEL = 0;
	CHILDREN = 34, 35, 36, 37, 38, 39, 40;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[6]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[5]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[4]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[3]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[2]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[1]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX4[0]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 44;
=======
	RADIX = Unsigned;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 33;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 52;
	TREE_LEVEL = 0;
	CHILDREN = 53, 54, 55, 56, 57, 58, 59;
=======
	RADIX = Unsigned;
	TREE_INDEX = 41;
	TREE_LEVEL = 0;
	CHILDREN = 42, 43, 44, 45, 46, 47, 48;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[6]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 52;
=======
	RADIX = Unsigned;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[5]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 52;
=======
	RADIX = Unsigned;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[4]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 52;
=======
	RADIX = Unsigned;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[3]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 52;
=======
	RADIX = Unsigned;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[2]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 52;
=======
	RADIX = Unsigned;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[1]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 52;
=======
	RADIX = Unsigned;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "HEX5[0]";
	EXPAND_STATUS = COLLAPSED;
<<<<<<< HEAD
	RADIX = Binary;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 52;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
=======
	RADIX = Unsigned;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 41;
>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[9]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
<<<<<<< HEAD
	TREE_INDEX = 61;
	TREE_LEVEL = 0;
}

=======
	TREE_INDEX = 49;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 50;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR_OUT";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 51;
	TREE_LEVEL = 0;
	CHILDREN = 52, 53, 54, 55, 56, 57, 58, 59;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "LEDR[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 51;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT";
	EXPAND_STATUS = EXPANDED;
	RADIX = Unsigned;
	TREE_INDEX = 60;
	TREE_LEVEL = 0;
	CHILDREN = 61, 62, 63, 64, 65, 66, 67, 68;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 60;
}

DISPLAY_LINE
{
	CHANNEL = "DATA_OUT[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Unsigned;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 60;
}

>>>>>>> cafc17b46a731f175043c3bbfe3e93ab0b07dd17
TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
